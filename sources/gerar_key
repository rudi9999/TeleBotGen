#!/bin/bash
# -*- ENCODING: UTF-8 -*-

# verificacion primarias
[[ -e ${CUS}/script ]] && SCPT_DIR=$(cat ${CUS}/script)
[[ -z $SCPT_DIR ]] && SCPT_DIR="/etc/SCRIPT"

[[ -e /etc/newadm-instalacao ]] && BASICINST="$(cat /etc/newadm-instalacao)" || BASICINST="$(ls ${SCPT_DIR})"

[[ ! -e ${SCPT_DIR} ]] && mkdir ${SCPT_DIR}
DIR="/etc/http-shell"
LIST="lista-arq"

gerar_key () {
	meu_ip_fun
	valuekey="$(date | md5sum | head -c10)"
	valuekey+="$(echo $(($RANDOM*10))|head -c 5)"
	fun_list "$valuekey"
	keyfinal=$(ofus "$IP:8888/$valuekey/$LIST")

	[[ -e ${CUS}/link ]] && link=$(cat ${CUS}/link)
	[[ -z $link ]] && link="NO HAY LINK INSTALADO!"

	local bot_retorno="$LINE\n"
		  bot_retorno+="✅ Key Generada Con Exito! ✅\n"
		  bot_retorno+="$LINE\n"
		  bot_retorno+="${keyfinal}\n"
		  bot_retorno+="$LINE\n"
		  bot_retorno+="$link\n"
		  bot_retorno+="$LINE\n"
		  bot_retorno+="Esta key se autodestruira en ${at_h}hs\npasado este tiempo deve generar una nueva key.\n"
		  bot_retorno+="$LINE\n"

	echo -e $bot_retorno >> ${keytxt}/key_${chatuser}.txt
	upfile_fun "${keytxt}/key_${chatuser}.txt" "botao_key"
	rm ${keytxt}/key_${chatuser}.txt
}

fun_list () {
	rm ${SCPT_DIR}/*.x.c &> /dev/null
	unset KEY
	KEY="$1"
	#CRIA DIR
	[[ ! -e ${DIR} ]] && mkdir ${DIR}
	#ENVIA ARQS
	i=0
	VALUE+="gerar.sh instgerador.sh http-server.py lista-arq $BASICINST"
	for arqx in `ls ${SCPT_DIR}`; do
		[[ $(echo $VALUE|grep -w "${arqx}") ]] && continue 
		echo -e "[$i] -> ${arqx}"
		arq_list[$i]="${arqx}"
		let i++
	done
	#CRIA KEY
	[[ ! -e ${DIR}/${KEY} ]] && mkdir ${DIR}/${KEY}
	#PASSA ARQS
	nombrevalue="${chatuser}"
	#ADM BASIC
	arqslist="$BASICINST"
	for arqx in `echo "${arqslist}"`; do
		[[ -e ${DIR}/${KEY}/$arqx ]] && continue #ANULA ARQUIVO CASO EXISTA
		cp ${SCPT_DIR}/$arqx ${DIR}/${KEY}/
		echo "$arqx" >> ${DIR}/${KEY}/${LIST}
	done
	rm ${SCPT_DIR}/*.x.c &> /dev/null
	echo "$nombrevalue" > ${DIR}/${KEY}.name
	[[ ! -z $IPFIX ]] && echo "$IPFIX" > ${DIR}/${KEY}/keyfixa

	[[ -e ${CUS}/del ]] && at_h=$(cat ${CUS}/del)
	[[ -z $at_h ]] && at_h="4"
	at now +${at_h} hours <<< "rm -rf ${DIR}/${KEY} && rm -rf ${DIR}/${KEY}.name"
}

ofus () {
	unset server
	server=$(echo ${txt_ofuscatw}|cut -d':' -f1)
	unset txtofus
	number=$(expr length $1)
	for((i=1; i<$number+1; i++)); do
		txt[$i]=$(echo "$1" | cut -b $i)
		case ${txt[$i]} in
			".")txt[$i]="*";;
			"*")txt[$i]=".";;
			"1")txt[$i]="@";;
			"@")txt[$i]="1";;
			"2")txt[$i]="?";;
			"?")txt[$i]="2";;
			"4")txt[$i]="%";;
			"%")txt[$i]="4";;
			"-")txt[$i]="K";;
			"K")txt[$i]="-";;
		esac
		txtofus+="${txt[$i]}"
	done
	echo "$txtofus" | rev
}
